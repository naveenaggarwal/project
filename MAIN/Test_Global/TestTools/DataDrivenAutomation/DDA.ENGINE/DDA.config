<?xml version="1.0" encoding="utf-8" ?>
<configuration>
  <settings logFilePath="" loggingOption="Box" tfsServer="http://mscomvstf:8080/tfs/mscom" tfsProjectName="MSCOM CSP"/>

  <variables>
    <!--<replace oldValue="@char" updatedValue="thisIsAChar"/>
    <replace oldValue="World" updatedValue="Dude"/>
    <replace oldValue="Hello" updatedValue="Hola"/>-->
  </variables>
  <methods>
    <!--Single MTM parameter-->
    <pair key="Say @message" methodSignature="Say(String message)" reference="MAIATestMethods.StringClass" assembly="MAIATestMethods.dll">
      <mapp MTMParam="@message" CSParam="message"/>
    </pair>
    <!--Single MTM parameter and Action Resulting value-->
    <pair key="@response is received" methodSignature="AreDSameString(string var1, string var2)" reference="MAIATestMethods.StringClass" assembly="MAIATestMethods.dll">
      <mapp MTMParam="$ACTION_RESULT" CSParam="var1"/>
      <mapp MTMParam="@response" CSParam="var2"/>
    </pair>
    <!--Different MTM parameters, Same C# Method and Text-->
    <pair key="Response contains @val" methodSignature="StringContains(string main, string key)" reference="MAIATestMethods.StringClass" assembly="MAIATestMethods.dll">
      <mapp MTMParam="$ACTION_RESULT" CSParam="main"/>
      <mapp MTMParam="@val" CSParam="key"/>
    </pair>
    <pair key="Response contains @word" methodSignature="StringContains(string main, string key)" reference="MAIATestMethods.StringClass" assembly="MAIATestMethods.dll">
      <mapp MTMParam="$ACTION_RESULT" CSParam="main"/>
      <mapp MTMParam="@word" CSParam="key"/>
    </pair>
    <pair key="Response contains @char" methodSignature="StringContains(string main, string key)" reference="MAIATestMethods.StringClass" assembly="MAIATestMethods.dll">
      <mapp MTMParam="$ACTION_RESULT" CSParam="main"/>
      <mapp MTMParam="@char" CSParam="key"/>
    </pair>
    <!--More than one MTM parameters-->
    <pair key="Add @a + @b" methodSignature="Sum(int x, int y)" reference="MAIATestMethods.IntClass" assembly="MAIATestMethods.dll">
      <mapp MTMParam="@a" CSParam="x"/>
      <mapp MTMParam="@b" CSParam="y"/>
    </pair>
    <pair key="Result is @r" methodSignature="Same(int f, int v)" reference="MAIATestMethods.IntClass" assembly="MAIATestMethods.dll">
      <mapp MTMParam="$ACTION_RESULT" CSParam="f"/>
      <mapp MTMParam="@r" CSParam="v"/>
    </pair>
    <!--Result form previous Step's Expected Result outcome(Not yet implemented)-->
    <pair key="Read Step A" methodSignature="Read(obj o)" reference="TC_Automator.MethodsContainer" assembly="MAIATestMethods.dll">
      <mapp MTMParam="$EXPECTED_RESULT_2" CSParam="o"/>
    </pair>
    <!--Use of variables defned in Automation Code (Not yet implemented)-->
    <pair key="If $STEP_D_$EXPECTED_RESULT passed, add $STEP_A_$ACTION_RESULT result and $STEP_B_$ACTION_RESULT result" methodSignature="SumIf(bool condition, int x, int y)" reference="MAIATestMethods.IntClass" assembly="MAIATestMethods.dll">
      <mapp MTMParam="$STEP_A_$ACTION_RESULT" CSParam="x"/>
      <mapp MTMParam="$STEP_B_$ACTION_RESULT" CSParam="y"/>
      <mapp MTMParam="$STEP_D_$EXPECTED_RESULT" CSParam="condition"/>
    </pair>
    <!--TBD-->
    <pair key="Write value" methodSignature="Write(obj o)" reference="TC_Automator.MethodsContainer">
      <mapp MTMParam="$VAR:I" CSParam="o"/>
    </pair>
    <!--TBD-->
    <pair key="Do Nothing" methodSignature="$SKIP" reference=""/>
  </methods>
</configuration>